title: ESCU - Unloading AMSI via Reflection - Rule
description: "The following analytic utilizes PowerShell Script Block Logging (EventCode=4104)\
  \ to identify suspicious PowerShell execution. Script Block Logging captures the\
  \ command sent to PowerShell, the full command to be executed. Upon enabling, logs\
  \ will output to Windows event logs. Dependent upon volume, enable on critical endpoints\
  \ or all.\nThis analytic identifies the behavior of AMSI being tampered with. Implemented\
  \ natively in many frameworks, the command will look similar to SEtValuE($Null,(New-OBJEct\
  \ COLlECtionS.GenerIC.HAshSEt{[StrINg]))}$ReF=[ReF].AsSeMbLY.GeTTyPe(&#34;System.Management.Automation.Amsi&#34;+&#34;Utils&#34;)\
  \ taken from Powershell-Empire.\nDuring triage, review parallel processes using\
  \ an EDR product or 4688 events. It will be important to understand the timeline\
  \ of events around this activity. Review the entire logged PowerShell script block."
status: Missing Data Source
author: DS
logsource:
  product: Splunk
  service: splunkd
  category: Windows
detection:
  condition:
    sigma: "`powershell` EventCode=4104 ScriptBlockText = *system.management.automation.amsi*\
      \ \n\n  -  stats count min(_time) as firstTime max(_time) as lastTime by EventCode\
      \ ScriptBlockText Computer user_id \n\n  -  `security_content_ctime(firstTime)`\
      \ \n\n  -  `security_content_ctime(lastTime)` \n\n  -  `unloading_amsi_via_reflection_filter`"
  level: critical
tags:
- T1059.001
- 'Command and Scripting Interpreter: PowerShell'
- Execution
references: Requires PowerShell logs
notes: .nan
