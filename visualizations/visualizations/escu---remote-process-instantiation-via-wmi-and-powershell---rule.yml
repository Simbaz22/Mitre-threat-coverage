title: ESCU - Remote Process Instantiation via WMI and PowerShell - Rule
description: This analytic looks for the execution of `powershell.exe` leveraging
  the `Invoke-WmiMethod` commandlet complemented with arguments utilized to start
  a process on a remote endpoint by abusing WMI. Red Teams and adversaries alike may
  abuse WMI and `powershell.exe` for lateral movement and remote code execution.
status: Missing Data Source
author: DS
logsource:
  product: Splunk
  service: splunkd
  category: Windows
detection:
  condition:
    sigma: "\n  -  tstats `security_content_summariesonly` count min(_time) as firstTime\
      \ max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell`\
      \ (Processes.process=\"*Invoke-WmiMethod*\" AND Processes.process=\"*-CN*\"\
      \ AND Processes.process=\"*-Class Win32_Process*\" AND  Processes.process=\"\
      *-Name create*\") by Processes.dest Processes.user Processes.parent_process_name\
      \ Processes.process_name Processes.process Processes.process_id Processes.parent_process_id\
      \ \n  -  `drop_dm_object_name(Processes)` \n  -  `security_content_ctime(firstTime)`\n\
      \  -  `security_content_ctime(lastTime)` \n  -  `remote_process_instantiation_via_wmi_and_powershell_filter`"
  level: critical
tags:
- T1047
- Windows Management Instrumentation
- Execution
references: Increase Windows logging to include command line data
notes: .nan
