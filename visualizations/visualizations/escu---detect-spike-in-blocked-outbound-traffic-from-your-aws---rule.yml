title: ESCU - Detect Spike in blocked Outbound Traffic from your AWS - Rule
description: This search will detect spike in blocked outbound network connections
  originating from within your AWS environment.  It will also update the cache file
  that factors in the latest data.
status: Missing Data Source
author: DS
logsource:
  product: Splunk
  service: splunkd
  category: "AWS\nCloud"
detection:
  condition:
    sigma: "`cloudwatchlogs_vpcflow` action=blocked (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12\
      \ OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND dest_ip!=172.16.0.0/12\
      \ AND dest_ip!=192.168.0.0/16)  [ `cloudwatchlogs_vpcflow` action=blocked (src_ip=10.0.0.0/8\
      \ OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16) ( dest_ip!=10.0.0.0/8 AND\
      \ dest_ip!=172.16.0.0/12 AND dest_ip!=192.168.0.0/16)  \n  -  stats count as\
      \ numberOfBlockedConnections by src_ip \n  -  inputlookup baseline_blocked_outbound_connections\
      \ append=t \n  -  fields - latestCount \n  -  stats values(*) as * by src_ip\
      \ \n  -  rename numberOfBlockedConnections as latestCount \n  -  eval newAvgBlockedConnections=avgBlockedConnections\
      \ + (latestCount-avgBlockedConnections)/720 \n  -  eval newStdevBlockedConnections=sqrt(((pow(stdevBlockedConnections,\
      \ 2)*719 + (latestCount-newAvgBlockedConnections)*(latestCount-avgBlockedConnections))/720))\
      \ \n  -  eval avgBlockedConnections=coalesce(newAvgBlockedConnections, avgBlockedConnections),\
      \ stdevBlockedConnections=coalesce(newStdevBlockedConnections, stdevBlockedConnections),\
      \ numDataPoints=if(isnull(latestCount), numDataPoints, numDataPoints+1) \n \
      \ -  table src_ip, latestCount, numDataPoints, avgBlockedConnections, stdevBlockedConnections\
      \ \n  -  outputlookup baseline_blocked_outbound_connections \n  -  eval dataPointThreshold\
      \ = 5, deviationThreshold = 3 \n  -  eval isSpike=if((latestCount > avgBlockedConnections+deviationThreshold*stdevBlockedConnections)\
      \ AND numDataPoints > dataPointThreshold, 1, 0) \n  -  where isSpike=1 \n  -\
      \  table src_ip] \n  -  stats values(dest_ip) as \"Blocked Destination IPs\"\
      , values(interface_id) as \"resourceId\" count as numberOfBlockedConnections,\
      \ dc(dest_ip) as uniqueDestConnections by src_ip \n  -  `detect_spike_in_blocked_outbound_traffic_from_your_aws_filter`"
  level: critical
tags:
- T1530
- Data from Cloud Storage
- Collection
references: .nan
notes: Missing ws:cloudwatchlogs:vpcflow
