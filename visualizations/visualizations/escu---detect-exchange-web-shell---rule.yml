title: ESCU - Detect Exchange Web Shell - Rule
description: 'The following query identifies suspicious .aspx created in 3 paths identified
  by Microsoft as known drop locations for Exchange exploitation related to HAFNIUM
  group and recently disclosed vulnerablity named ProxyShell. Paths include: `\HttpProxy\owa\auth\`,
  `\inetpub\wwwroot\aspnet_client\`, and `\HttpProxy\OAB\`. Upon triage, the suspicious
  .aspx file will likely look obvious on the surface. inspect the contents for script
  code inside. Identify additional log sources, IIS included, to review source and
  other potential exploitation. It is often the case that a particular threat is only
  applicable to a specific subset of systems in your environment. Typically analytics
  to detect those threats are written without the benefit of being able to only target
  those systems as well. Writing analytics against all systems when those behaviors
  are limited to identifiable subsets of those systems is suboptimal. Consider the
  case ProxyShell vulnerability on Microsoft Exchange Servers. With asset information,
  a hunter can limit their analytics to systems that have been identified as Exchange
  servers. A hunter may start with the theory that the exchange server is communicating
  with new systems that it has not previously. If this theory is run against all publicly
  facing systems, the amount of noise it will generate will likely render this theory
  untenable. However, using the asset information to limit this analytic to just the
  Exchange servers will reduce the noise allowing the hunter to focus only on the
  systems where this behavioral change is relevant.'
status: Missing Data Source
author: DS
logsource:
  product: Splunk
  service: splunkd
  category: Windows
detection:
  condition:
    sigma: "\n  -  tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes\
      \ where Processes.process_name=System  by _time span=1h Processes.process_id\
      \ Processes.process_name Processes.dest \n  -  `drop_dm_object_name(Processes)`\
      \ \n  -  join process_guid, _time [\n  -  tstats `security_content_summariesonly`\
      \ count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem\
      \ where Filesystem.file_path IN (\"*\\\\HttpProxy\\\\owa\\\\auth\\\\*\", \"\
      *\\\\inetpub\\\\wwwroot\\\\aspnet_client\\\\*\", \"*\\\\HttpProxy\\\\OAB\\\\\
      *\") Filesystem.file_name=\"*.aspx\" by _time span=1h Filesystem.dest Filesystem.file_create_time\
      \ Filesystem.file_name Filesystem.file_path \n  -  `drop_dm_object_name(Filesystem)`\
      \ \n  -  fields _time dest file_create_time file_name file_path process_name\
      \ process_path process] \n  -  dedup file_create_time \n  -  table dest file_create_time,\
      \ file_name, file_path, process_name \n  -  `detect_exchange_web_shell_filter`"
  level: critical
tags:
- "T1505\nT1505.003\nT1190"
- Server Software Component
- Server Software Component
references: "Increase Windows logging to include command line data\nIncrease Windows\
  \ logging to include file modification data"
notes: .nan
